# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SCIENCE.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import random

import varR
from result import *


class Final(QtWidgets.QMainWindow, Ui_Final):
    def __init__(self):
        super().__init__()
        self.setupUi(self)


class Result(QtWidgets.QMainWindow, Ui_RESULT):
    def __init__(self):
        super().__init__()
        self.setupUi(self)


class Ui_SCIENCE(object):
    def __init__(self):
        self.finalWind = Final()
        self.pixmap = QtGui.QPixmap('321.jpg')
        self.resWind = Result()

    def setupUi(self, SCIENCE):
        SCIENCE.setObjectName("SCIENCE")
        SCIENCE.resize(820, 435)
        SCIENCE.setStyleSheet("")
        SCIENCE.setAnimated(False)
        self.centralwidget = QtWidgets.QWidget(SCIENCE)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(820, 435))
        self.centralwidget.setMaximumSize(QtCore.QSize(820, 444))
        self.centralwidget.setBaseSize(QtCore.QSize(820, 444))
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(132, 223, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(119, 48, 132);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(132, 320, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background-color: rgb(119, 48, 132);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(480, 223, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setStyleSheet("background-color: rgb(119, 48, 132);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(480, 320, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setStyleSheet("background-color: rgb(119, 48, 132);")
        self.pushButton_4.setObjectName("pushButton_4")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 30, 651, 150))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setOpenExternalLinks(False)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 821, 441))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("imgonline-com-ua-Resize-FywDeVxTGO.png"))
        self.label_2.setObjectName("label_2")
        self.label_2.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        self.pushButton_4.raise_()
        self.label.raise_()
        SCIENCE.setCentralWidget(self.centralwidget)

        self.retranslateUi(SCIENCE)
        QtCore.QMetaObject.connectSlotsByName(SCIENCE)

    def retranslateUi(self, SCIENCE):
        _translate = QtCore.QCoreApplication.translate
        SCIENCE.setWindowTitle(_translate("SCIENCE", "НАУКА"))
        self.pushButton.setText(_translate("SCIENCE", "PushButton"))
        self.pushButton_2.setText(_translate("SCIENCE", "PushButton"))
        self.pushButton_3.setText(_translate("SCIENCE", "PushButton"))
        self.pushButton_4.setText(_translate("SCIENCE", "PushButton"))
        self.label.setText(_translate("SCIENCE", "ЙУцйуйц"))

        self.btn_grp = QtWidgets.QButtonGroup()
        self.btn_grp.setExclusive(True)
        self.btn_grp.addButton(self.pushButton)
        self.btn_grp.addButton(self.pushButton_2)
        self.btn_grp.addButton(self.pushButton_3)
        self.btn_grp.addButton(self.pushButton_4)

        self.btn_grp.buttonClicked.connect(self.answer)

        self.list = [('Какая звезда ближе всего у Земле?', 'Солнце', 'Сириус', 'Альтаир', 'Ахернар'),
                     ('Как называется хим. элемент He?', 'Кислород', 'Хлор', 'Гелий', 'Водород'),
                     ('Сколько градусов по Цельсию абсолютный ноль?', '-255', "-273,15", "-270,5", "-280"),
                     ('Самое крупное животное на земле это?', "Африк. cлон", "Коралл", "Жираф", "Синий кит"),
                     ('Что такое Гольфстрим?', "Океан. течение", "Гора", "Река", "Впадина"),
                     ('На какую оценку оцените себя?', '2', '3', '4', '5')]

        self.true = 0
        self.posl = [1, 2, 3, 4]
        random.shuffle(self.posl)
        self.label.setText(self.list[0][0])
        self.count = 1
        self.pushButton.setText(self.list[0][self.posl[0]])
        self.pushButton_2.setText(self.list[0][self.posl[1]])
        self.pushButton_3.setText(self.list[0][self.posl[2]])
        self.pushButton_4.setText(self.list[0][self.posl[3]])

    def answer(self, btn):
        if self.count < len(self.list):
            text = btn.text()
            self.label.setText(self.list[self.count][0])
            random.shuffle(self.posl)
            self.pushButton.setText(self.list[self.count][self.posl[0]])
            self.pushButton_2.setText(self.list[self.count][self.posl[1]])
            self.pushButton_3.setText(self.list[self.count][self.posl[2]])
            self.pushButton_4.setText(self.list[self.count][self.posl[3]])
            if self.count == 1:
                answer = 'Солнце'
                if text == answer:
                    self.true += 1
            if self.count == 2:
                answer = 'Гелий'
                if text == answer:
                    self.true += 1
            if self.count == 3:
                answer = '-273,15'
                if text == answer:
                    self.true += 1
            if self.count == 4:
                answer = 'Синий кит'
                if text == answer:
                    self.true += 1
            if self.count == 5:
                answer = 'Океан. течение'
                if text == answer:
                    self.true += 1
            self.count += 1
        elif self.count == 6:
            self.resWind.show()
            self.resWind.label_2.setText(f'{self.true}/5')
            if self.true == 0:
                self.resWind.label_3.setText('Вы совсем не молодец(')
            if self.true == 1:
                self.resWind.label_3.setText('Вы не молодец(')
            if self.true == 2:
                self.resWind.label_3.setText('Вам нужно больше стараться ^-^')
            if self.true == 3:
                self.resWind.label_3.setText('Неплохой результат!')
            if self.true == 4:
                self.resWind.label_3.setText('Вы молодец!')
            if self.true == 5:
                self.resWind.label_3.setText('Вы отлично справились!!!')
            self.hide()
            varR.schet += self.true
            if varR.predel == 7:
                self.finalWind.label_3.setText(f'{varR.schet}/25')
                self.resWind.hide()
                self.finalWind.show()
            print(varR.schet)